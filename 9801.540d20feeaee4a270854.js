(self.webpackChunktui_editor=self.webpackChunktui_editor||[]).push([[9801],{79801:n=>{n.exports="import {ChangeDetectionStrategy, Component, ViewChild} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {\n    TUI_EDITOR_EXTENSIONS,\n    TuiEditorComponent,\n    TuiEditorTool,\n} from '@tbank/tui-editor';\n\nimport {User} from './mention';\n\n@Component({\n    selector: 'tui-editor-mention-example-1',\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_EDITOR_EXTENSIONS,\n            useValue: [\n                import('@tbank/tui-editor/extensions/starter-kit').then(\n                    ({StarterKit}) => StarterKit,\n                ),\n                import('@tbank/tui-editor/extensions/link').then(({TuiLink}) => TuiLink),\n                import('@tiptap/extension-text-style').then(\n                    ({default: TextStyle}) => TextStyle,\n                ),\n                import('@tbank/tui-editor/extensions/mention').then(\n                    ({TuiMention}) => TuiMention,\n                ),\n            ],\n        },\n    ],\n})\nexport class TuiEditorMentionExample1 {\n    @ViewChild(TuiEditorComponent)\n    readonly wysiwyg?: TuiEditorComponent;\n\n    readonly builtInTools = [TuiEditorTool.Undo, TuiEditorTool.Size, TuiEditorTool.Link];\n\n    control = new FormControl(`\n        <p><span class=\"my-mention\" data-type=\"mention\">@a.inkin</span> FYI</p>\n    `);\n\n    setMention(item: User): void {\n        const editor = this.wysiwyg?.editor?.getOriginTiptapEditor();\n\n        if (!editor) {\n            return;\n        }\n\n        const replaceText = `<span class=\"my-mention\" data-type=\"mention\">@${item.login}</span>&nbsp;`;\n        const to = editor.state.selection.to;\n        const from =\n            editor.state.selection.from -\n            (this.wysiwyg?.mentionSuggestions.length ?? 0) -\n            1;\n\n        editor.chain().focus().insertContentAt({from, to}, replaceText).run();\n    }\n}\n"}}]);