(self.webpackChunktui_editor=self.webpackChunktui_editor||[]).push([[3725],{13725:(e,s,o)=>{o.r(s),o.d(s,{FocusClasses:()=>n,default:()=>n});var t=o(46309),i=o(62463),d=o(43594);const n=t.Extension.create({name:"focus",addOptions:()=>({className:"has-focus",mode:"all"}),addProseMirrorPlugins(){return[new i.Sy({key:new i.H$("focus"),props:{decorations:({doc:e,selection:s})=>{const{isEditable:o,isFocused:t}=this.editor,{anchor:i}=s,n=[];if(!o||!t)return d.EH.create(e,[]);let a=0;"deepest"===this.options.mode&&e.descendants(((e,s)=>{if(!e.isText)return i>=s&&i<=s+e.nodeSize-1&&void(a+=1)}));let r=0;return e.descendants(((e,s)=>!e.isText&&i>=s&&i<=s+e.nodeSize-1&&(r+=1,"deepest"===this.options.mode&&a-r>0||"shallowest"===this.options.mode&&r>1?"deepest"===this.options.mode:void n.push(d.p.node(s,s+e.nodeSize,{class:this.options.className}))))),d.EH.create(e,n)}}})]}})}}]);