name: ⚠️ Release @tinkoff/tui-editor
on:
  workflow_dispatch:
    inputs:
      forcePush:
        type: boolean
        required: false
        description: --force-publish package
      mode:
        type: choice
        description: force package to be versioned (depend --force-publish)
        required: false
        default: minor
        options:
          - patch
          - minor
          - major

jobs:
  run-release:
    name: Run release
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.TAIGA_FAMILY_BOT_PAT }}
    steps:
      - uses: actions/checkout@v4.1.0
        with:
          submodules: recursive
          fetch-depth: 0
          persist-credentials: false
          ref: ${{ github.head_ref }}
          token: ${{ secrets.TAIGA_FAMILY_BOT_PAT }}
      - uses: taiga-family/ci/actions/setup-node@1.16.0
      - uses: taiga-family/ci/actions/setup-git@1.16.0
        with:
          token: ${{ secrets.TAIGA_FAMILY_BOT_PAT }}
      - uses: taiga-family/ci/actions/setup-npm@1.16.0
        with:
          token: ${{ secrets.NPM_TOKEN }}

      - name: Lerna update version of packages
        if: always()
        run: |
          if [[ ${{ github.event.inputs.forcePush }} == "true" ]]; then
            npx lerna version ${{ github.event.inputs.mode }} --no-private --force-publish
          else
              npx lerna version --no-private
          fi

      - name: Build
        run: npx nx build tui-editor

      - name: Publish
        if: always()
        run: npx nx publish tui-editor

      - name: Get new version
        id: info
        run: |
          echo "version=@tinkoff/tui-editor@$(node -p "require('./libs/tui-editor/package.json').version")" >> $GITHUB_OUTPUT

      - name: Announce to Telegram
        uses: taiga-family/ci/actions/telegram/announce@1.19.0
        with:
          chatId: ${{ secrets.TAIGA_TELEGRAM_CHAT_ID }}
          topicId: ${{ secrets.TAIGA_TELEGRAM_CHAT_THREAD_ID }}
          token: ${{ secrets.TAIGA_TELEGRAM_BOT_TOKEN }}
          version: ${{ steps.info.outputs.version }}

concurrency:
  group: release-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
