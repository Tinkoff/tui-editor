(self.webpackChunktui_editor=self.webpackChunktui_editor||[]).push([[9562],{19562:n=>{n.exports="import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport {tuiPure} from '@taiga-ui/cdk';\n\nexport interface User {\n    name: string;\n    avatar: string;\n    login: string;\n}\n\n@Component({\n    selector: 'mentions',\n    templateUrl: './index.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MentionsComponent {\n    @ViewChild('container', {read: ElementRef})\n    private readonly container?: ElementRef<HTMLDivElement>;\n\n    @Input()\n    mentionSuggestions?: string;\n\n    @Output()\n    setMention = new EventEmitter<User>();\n\n    readonly items: readonly User[] = [\n        {\n            name: 'Alexander Inkin',\n            avatar: 'https://taiga-ui.dev/assets/images/avatar.jpg',\n            login: 'a.inkin',\n        },\n        {\n            name: 'Roman Sedov',\n            avatar: '',\n            login: 'r.sedov',\n        },\n    ];\n\n    @tuiPure\n    getFilteredItems(items: readonly User[], search?: string): readonly User[] {\n        return search?.length\n            ? items.filter(\n                  ({name, login}) =>\n                      login.toLocaleLowerCase().startsWith(search.toLocaleLowerCase()) ||\n                      name.toLocaleLowerCase().startsWith(search.toLocaleLowerCase()),\n              )\n            : items;\n    }\n\n    @HostListener('window:keydown.arrowUp', ['$event', 'false'])\n    @HostListener('window:keydown.arrowDown', ['$event', 'true'])\n    protected down(event: Event, isDown: boolean): void {\n        const buttons = Array.from(this.el?.querySelectorAll('button') ?? []);\n        const button = isDown ? buttons[0] : buttons[buttons.length - 1];\n\n        if (!this.el?.contains(event.target as any)) {\n            button.focus();\n        }\n    }\n\n    private get el(): HTMLDivElement | null {\n        return this.container?.nativeElement ?? null;\n    }\n}\n"}}]);