(self.webpackChunkeditor_demo=self.webpackChunkeditor_demo||[]).push([[525],{525:(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var s=n(7355),o=n(2978),r=n(2392);const a=(()=>{var e;class t{constructor(){this.component1=Promise.all([n.e(1960),n.e(8969)]).then(n.bind(n,8969)),this.example1={TypeScript:n.e(3308).then(n.t.bind(n,927,17)),HTML:n.e(6292).then(n.t.bind(n,6292,17))}}}return(e=t).ɵfac=function(t){return new(t||e)},e.ɵcmp=o.VBU({type:e,selectors:[["ng-component"]],standalone:!0,features:[o.aNF],decls:6,vars:2,consts:[["header","Editor","type","components"],["href","https://prosemirror.net/docs/ref/#model.ParseOptions","target","_blank","tuiLink",""],["id","preserve-whitespace","description","By default, whitespace is collapsed as per HTML's rules. Pass true to preserve whitespace, but normalize newlines to spaces, and 'full' to preserve whitespace entirely.","heading","Preserve whitespace",3,"component","content"]],template:function(e,t){1&e&&(o.j41(0,"tui-doc-page",0)(1,"p"),o.EFF(2," Passed content is parsed by ProseMirror. To hook into the parsing, you can pass parseOptions which are then handled by "),o.j41(3,"a",1),o.EFF(4," ProseMirror. "),o.k0s()(),o.nrm(5,"tui-doc-example",2),o.k0s()),2&e&&(o.R7$(5),o.Y8G("component",t.component1)("content",t.example1))},dependencies:[r.FS,r.e3,s.Jc],encapsulation:2,changeDetection:0}),t})()}}]);